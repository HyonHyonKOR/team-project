<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.shoppingmall.item.mapper.ItemMapper">

<!--    <resultMap id="itemResultMap" type="com.example.shoppingmall.order.domain.Item">-->
<!--        <id column="item_no" property="itemNo"/>-->
<!--        <result column="item_name" property="itemName"/>-->
<!--        <result column="item_category" property="itemCategory"/>-->
<!--        <result column="item_grade" property="itemGrade"/>-->
<!--        <result column="item_detail" property="itemDetail"/>-->
<!--        <result column="item_price" property="itemPrice"/>-->
<!--        <result column="item_onsale" property="itemOnsale"/>-->
<!--        <result column="item_registered_time" property="itemRegisteredTime"/>-->
<!--        &lt;!&ndash;1:1 매핑 => association 사용&ndash;&gt;-->
<!--&lt;!&ndash;        <association property="itemPhoto" javaType="com.example.shoppingmall.order.domain.ItemPhoto">&ndash;&gt;-->
<!--&lt;!&ndash;            &ndash;&gt;-->
<!--&lt;!&ndash;        </association>&ndash;&gt;-->
<!--        &lt;!&ndash; 1:N 매핑 => collection 사용 &ndash;&gt;-->
<!--        <collection property="itemStockList" ofType="com.example.shoppingmall.order.domain.ItemStock">-->
<!--            <id column="item_stock_no" property="itemStockNo"/>-->
<!--            <result column="item_no" property="itemNo"/>-->
<!--            <result column="item_size" property="itemSize"/>-->
<!--            <result column="item_stock" property="itemStock"/>-->
<!--        </collection>-->
<!--    </resultMap>-->

<!--    <select id="joinItemByItemNo" resultMap="itemResultMap">-->
<!--        select-->
<!--            a.item_no,-->
<!--            a.item_name,-->
<!--            a.item_category,-->
<!--            a.item_grade,-->
<!--            a.item_detail,-->
<!--            a.item_price,-->
<!--            a.item_onsale,-->
<!--            a.item_registered_time,-->
<!--            b.item_stock_no,-->
<!--            b.item_size,-->
<!--            b.item_stock-->
<!--        from item as a-->
<!--        join-->
<!--            item_stock as b-->
<!--            on a.item_no = b.item_no-->
<!--        where a.item_no = #{itemNo}-->
<!--    </select>-->



    <insert id="saveItem" parameterType="com.example.shoppingmall.item.domain.Item">
        insert into item
        values (#{itemNo},#{itemName},#{itemCategory},#{itemGrade},#{itemDetail},#{itemPrice},#{itemOnsale},#{itemRegisteredTime})
    </insert>

    <insert id="saveItemPhotos" parameterType="com.example.shoppingmall.item.domain.ItemPhotos">
        insert into item_photos
        values (#{itemNo}, #{itemThumb}, #{itemImg1}, #{itemImg2}, #{itemImg3}, #{itemThumbModified}, #{itemImg1Modified}, #{itemImg2Modified}, #{itemImg3Modified})
    </insert>

    <insert id="saveItemStock" parameterType="com.example.shoppingmall.item.domain.ItemStock">
        insert into item_stock
        values (#{itemStockNo}, #{itemNo}, #{itemSize}, #{itemStock})
    </insert>

    <select id="findAllItems" resultType="com.example.shoppingmall.item.domain.Item">
        select * from item
    </select>

    <select id="findAllItemsOnsale" resultType="com.example.shoppingmall.item.domain.Item">
        select * from item where item_onsale = 1
    </select>

    <select id="findAllItemsOffmarket" resultType="com.example.shoppingmall.item.domain.Item">
        select * from item where item_onsale = 0
    </select>

    <select id="findItemByNo" resultType="com.example.shoppingmall.item.domain.Item">
        select * from item where item_no = #{itemNo}
    </select>

    <select id="findItemsByName" resultType="java.lang.String">
        select * from item where item_name = #{itemName}
    </select>

    <update id="updateItemByNo" parameterType="com.example.shoppingmall.item.domain.Item">
        update item
        set item_name = #{itemName},
            item_category=#{itemCategory},
            item_detail=#{itemDetail},
            item_onsale=#{itemOnsale}
        where item_no = #{itemNo}
    </update>

    <update id="updateItemStockByNo" parameterType="com.example.shoppingmall.item.domain.ItemStock">
        update item_stock
        set item_stock = #{itemStock}
        where item_stock_no=#{item_stock_no}
    </update>

    <delete id="deleteItemByNo" parameterType="com.example.shoppingmall.item.domain.Item">
        delete from item where item_no = #{itemNo}
    </delete>

    <delete id="deleteItemPhotosByNo" parameterType="com.example.shoppingmall.item.domain.ItemPhotos">
        delete from item where item_no = #{itemNo}
    </delete>

    <delete id="deleteItemStockByStockNo" parameterType="com.example.shoppingmall.item.domain.ItemStock">
        delete from item where item_stock_no = #{itemStockNo}
    </delete>

<!--    <delete id="deleteItemByName" parameterType="com.example.shoppingmall.item.domain.Item">-->
<!--        delete from item where item_name = #{itemName}-->
<!--    </delete>-->

    <select id="findItemStocksByItemNo" parameterType="com.example.shoppingmall.item.domain.Item" resultType="java.util.List">
        select * from item_stock where item_no = #{itemNo}
    </select>

</mapper>
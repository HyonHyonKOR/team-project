<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.shoppingmall.member.mapper.MemberMapper">
    <insert id="save" parameterType="com.example.shoppingmall.member.domain.Member">
        insert into member values (#{memberNo},#{memberId},#{memberHp},#{memberEmail},#{memberPw},#{memberName},#{memberPostalCode},#{memberAddressBasic},#{memberAddressDetail})
    </insert>

    <select id="findById" resultType="com.example.shoppingmall.member.domain.Member">
        select * from member where member_id = #{memberId}
    </select>

    <select id="findByNo" resultType="com.example.shoppingmall.member.domain.Member">
        select * from member where member_no = #{memberNo}
    </select>

    <select id="findByEmail" resultType="com.example.shoppingmall.member.domain.Member">
        select * from member where member_email = #{memberEmail}
    </select>

    <select id="findByNoContaining" resultType="com.example.shoppingmall.member.domain.Member">
        select * from member where member_no = #{memberNo}
    </select>

    <select id="findByIdContaining" resultType="com.example.shoppingmall.member.domain.Member">
        select * from member where member_id LIKE CONCAT ('%',#{memberId},'%')
    </select>


    <select id="findByEmailContaining" resultType="com.example.shoppingmall.member.domain.Member">
        select * from member where member_email LIKE CONCAT ('%',#{memberEmail},'%')
    </select>

    <select id="findByNameContaining" resultType="com.example.shoppingmall.member.domain.Member">
        select * from member where member_name LIKE CONCAT ('%',#{memberName},'%')
    </select>

    <select id="findByHpContaining" resultType="com.example.shoppingmall.member.domain.Member">
        select * from member where member_hp LIKE CONCAT ('%',#{memberHp},'%')
    </select>

    <select id="findByAddressBasicContaining" resultType="com.example.shoppingmall.member.domain.Member">
        select * from member where member_address_basic LIKE CONCAT ('%',#{memberAddressBasic},'%')
    </select>

    <update id="update" parameterType="com.example.shoppingmall.member.domain.Member">
        UPDATE member
        SET
            member_pw = #{memberPw},
            member_name = #{memberName},
            member_hp = #{memberHp},
            member_postal_code = #{memberPostalCode},
            member_address_basic = #{memberAddressBasic},
            member_address_detail = #{memberAddressDetail}
        where member_id = #{memberId}
    </update>

    <delete id="deleteByNo" parameterType="com.example.shoppingmall.member.domain.Member">
        delete from member where member_no = #{memberNo}
    </delete>

    <select id="findAll" resultType="com.example.shoppingmall.member.domain.Member">
        select * from member order by member_no desc
    </select>

<!--    김찬혁 페이징-->
    <select id="pagingList" parameterType="java.util.HashMap" resultType="com.example.shoppingmall.member.dto.MemberListDTO">
    select * from member order by member_no desc limit #{start}, #{limit}
    </select>

    <select id="memberCount" resultType="Long">
        select count(member_no) from member
    </select>
</mapper>